openapi: 3.0.0
info:
  title: Facebluk User Command API
  version: 1.0.0
  description: These are the APIs exposed by our backend SDK. To be consumed by the frontend only.
servers:
  - url: http://localhost:3000/api
    description: API
tags:
  - name: Posts
  - name: Friend Requests
  - name: User Relationships
  - name: Users
paths:
  /users/register:
    post:
      operationId: registerUser
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  maxLength: 100
                profilePicture:
                  type: string
                  format: binary
            encoding:
              profilePicture:
                contentType: image/png, image/jpeg
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /posts/create:
    post:
      operationId: createPost
      summary: Create a new user post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - postId
                properties:
                  postId:
                    type: string
                    format: uuid
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /friend-requests/send:
    post:
      operationId: sendFriendRequest
      summary: Sends a new friend request
      tags:
        - Friend Requests
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserId
              properties:
                toUserId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - friendRequestId
                properties:
                  friendRequestId:
                    type: string
                    format: uuid
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /friend-requests/accept:
    post:
      operationId: acceptFriendRequest
      summary: Accepts a pending friend request
      tags:
        - Friend Requests
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - friendRequestId
              properties:
                friendRequestId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /friend-requests/cancel:
    post:
      operationId: cancelFriendRequest
      summary: Cancels a pending friend request
      tags:
        - Friend Requests
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - friendRequestId
              properties:
                friendRequestId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /friend-requests/reject:
    post:
      operationId: rejectFriendRequest
      summary: Rejects a pending friend request
      tags:
        - Friend Requests
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - friendRequestId
              properties:
                friendRequestId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /user-relationships/block:
    post:
      operationId: blockUser
      summary: Blocks a user
      tags:
        - User Relationships
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserId
              properties:
                toUserId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /user-relationships/unblock:
    post:
      operationId: unblockUser
      summary: Unblocks a user
      tags:
        - User Relationships
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserId
              properties:
                toUserId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

  /user-relationships/unfriend:
    post:
      operationId: unfriendUser
      summary: Unfriends a user
      tags:
        - User Relationships
      requestBody:
        description: Payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserId
              properties:
                toUserId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Success
        '422':
          $ref: '#/components/responses/BusinessRuleError'
        '500':
          $ref: '#/components/responses/UnexpectedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BusinessRuleError:
      description: BusinessRuleError
      content:
        application/json:
          schema:
            type: object
            required:
              - requestId
              - message
            properties:
              requestId:
                type: string
                format: uuid
              message:
                type: string
    UnexpectedError:
      description: UnexpectedError
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
security:
  - bearerAuth: []
